---
# We have to do this because the CentOS mirrors don't keep kernel-headers, etc
# for older kernels.
- name: ensure we have kernel-headers installed for the current kernel
  block:
  - name: attempt to install kernel support packages for current version
    yum:
      name:
        - "kernel-headers-{{ ansible_kernel }}"
        - "kernel-tools-{{ ansible_kernel }}"
        - "kernel-tools-libs-{{ ansible_kernel }}"
        - "kernel-devel-{{ ansible_kernel }}"
        - "kernel-debug-devel-{{ ansible_kernel }}"
      state: present
    environment: "{{proxy_env if proxy_env is defined else {}}}"
  rescue:
  - name: update the kernel to latest version so we have a supported version
    yum:
      name:
        - "kernel"
        - "kernel-headers"
        - "kernel-tools"
        - "kernel-tools-libs"
        - "kernel-devel"
        - "kernel-debug-devel"
      state: latest
    environment: "{{proxy_env if proxy_env is defined else {}}}"
  - name: reboot to pick up the new kernel
    reboot:

- name: add epel repo
  become: true
  yum:
    name: 
      - "{{ epel_package }}"
    state: latest
  environment: "{{proxy_env if proxy_env is defined else {}}}"

- name: install dependencies
  yum: name=dkms

- name: add repo
  yum_repository:
    name: cuda
    description: NVIDIA CUDA YUM Repo
    baseurl: "{{ nvidia_driver_rhel_cuda_repo_baseurl }}"
    gpgkey: "{{ nvidia_driver_rhel_cuda_repo_gpgkey }}"
  environment: "{{proxy_env if proxy_env is defined else {}}}"

- set_fact:
    nvidia_driver_package_name: "nvidia-driver"
  hen: ansible_distribution_major_version|int >= 8

- name: install driver packages
  yum:
    name: "{{ nvidia_driver_package_version | ternary(nvidia_driver_package_name+'-'+nvidia_driver_package_version, nvidia_driver_package_name) }}"
    state: "{{ nvidia_driver_package_state }}"
    autoremove: "{{ nvidia_driver_package_state == 'absent' }}"
  register: install_driver
  environment: "{{proxy_env if proxy_env is defined else {}}}"

